<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>author</key>
	<string>Victor Petrovykh victor@magic.io</string>
	<key>fileTypes</key>
	<array>
		<string>regexp</string>
	</array>
	<key>name</key>
	<string>MagicRegExp</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#expression</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>backreference</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.backreference.named.begin.regexp support.type.parenthesis.regexp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.named.backreference.regexp</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.backreference.named.end.regexp support.type.parenthesis.regexp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(?x)
  (\()  (\?P= \w+(?:\s+[[:alnum:]]+)?)  (\))
</string>
			<key>name</key>
			<string>meta.backreference.named.regexp</string>
		</dict>
		<key>backreference-number</key>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.backreference.regexp</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(\\[1-9]\d?)</string>
			<key>name</key>
			<string>meta.backreference.regexp</string>
		</dict>
		<key>character-set</key>
		<dict>
			<key>begin</key>
			<string>(\[)(\^)?(\])?</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.character.set.regexp punctuation.character.set.begin.regexp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.negation.regexp</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>constant.character.set.regexp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\])</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>constant.character.set.regexp punctuation.character.set.end.regexp</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.character.set.regexp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#charecter-set-escapes</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[^\n]</string>
					<key>name</key>
					<string>constant.character.set.regexp</string>
				</dict>
			</array>
		</dict>
		<key>charecter-set-escapes</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\[abfnrtv\\]</string>
					<key>name</key>
					<string>support.type.escape.character.regexp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escape-special</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\([0-7]{1,3})</string>
					<key>name</key>
					<string>constant.character.escape.regexp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escape-character</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escape-unicode</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escape-catchall</string>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>begin</key>
			<string>\(\?#</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.comments.begin.regexp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.comments.end.regexp</string>
				</dict>
			</dict>
			<key>name</key>
			<string>comment.regexp</string>
		</dict>
		<key>conditional</key>
		<dict>
			<key>begin</key>
			<string>(\()\?\((\w+(?:\s+[[:alnum:]]+)?|\d+)\)</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.conditional.regexp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.conditional.begin.regexp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.conditional.end.regexp keyword.operator.conditional.negative.regexp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>escape-catchall</key>
		<dict>
			<key>match</key>
			<string>\\(.|\n)</string>
			<key>name</key>
			<string>constant.character.escape.regexp</string>
		</dict>
		<key>escape-character</key>
		<dict>
			<key>match</key>
			<string>(?x)
  \\ (
        x[0-9A-Fa-f]{2}
        | 0[0-7]{1,2}
        | [0-7]{3}
     )
</string>
			<key>name</key>
			<string>constant.character.escape.regexp</string>
		</dict>
		<key>escape-sequence</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#escape-special</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escape-character</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escape-unicode</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#backreference-number</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escape-catchall</string>
				</dict>
			</array>
		</dict>
		<key>escape-special</key>
		<dict>
			<key>match</key>
			<string>\\([AbBdDsSwWZ])</string>
			<key>name</key>
			<string>support.type.escape.special.regexp</string>
		</dict>
		<key>escape-unicode</key>
		<dict>
			<key>match</key>
			<string>(?x)
  \\ (
        u[0-9A-Fa-f]{4}
        | U[0-9A-Fa-f]{8}
     )
</string>
			<key>name</key>
			<string>constant.character.unicode.regexp</string>
		</dict>
		<key>expression</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>support.type.match.any.regexp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\^</string>
					<key>name</key>
					<string>support.type.match.begin.regexp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\$</string>
					<key>name</key>
					<string>support.type.match.end.regexp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[+*?]\??</string>
					<key>name</key>
					<string>keyword.operator.quantifier.regexp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\|</string>
					<key>name</key>
					<string>keyword.operator.disjunction.regexp</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?x)
  \{(
    \d+ | \d+,(\d+)? | ,\d+
  )\}
</string>
					<key>name</key>
					<string>keyword.operator.quantifier.regexp</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#escape-sequence</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#character-set</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comments</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#flags</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#named-group</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#backreference</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#lookahead</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#lookahead-negative</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#lookbehind</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#lookbehind-negative</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#conditional</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parentheses-non-capturing</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parentheses</string>
				</dict>
			</array>
		</dict>
		<key>flags</key>
		<dict>
			<key>match</key>
			<string>\(\?[aiLmsux]+\)</string>
			<key>name</key>
			<string>entity.name.function.flag.regexp</string>
		</dict>
		<key>lookahead</key>
		<dict>
			<key>begin</key>
			<string>(\()\?=</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.lookahead.regexp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.lookahead.begin.regexp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.lookahead.end.regexp keyword.operator.lookahead.regexp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>lookahead-negative</key>
		<dict>
			<key>begin</key>
			<string>(\()\?!</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.lookahead.negative.regexp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.lookahead.begin.regexp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.lookahead.end.regexp keyword.operator.lookahead.negative.regexp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>lookbehind</key>
		<dict>
			<key>begin</key>
			<string>(\()\?&lt;=</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.lookbehind.regexp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.lookbehind.begin.regexp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.lookbehind.end.regexp keyword.operator.lookbehind.regexp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>lookbehind-negative</key>
		<dict>
			<key>begin</key>
			<string>(\()\?&lt;!</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.lookbehind.negative.regexp</string>
				</dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.lookbehind.begin.regexp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.lookbehind.end.regexp keyword.operator.lookbehind.negative.regexp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>named-group</key>
		<dict>
			<key>begin</key>
			<string>(?x)
  (\()  (\?P &lt;\w+(?:\s+[[:alnum:]]+)?&gt;)
</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.named.begin.regexp support.type.parenthesis.regexp</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.named.group.regexp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.named.end.regexp support.type.parenthesis.regexp</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.named.regexp</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>parentheses</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.begin.regexp support.type.parenthesis.regexp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.end.regexp support.type.parenthesis.regexp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
		<key>parentheses-non-capturing</key>
		<dict>
			<key>begin</key>
			<string>\(\?:</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.non-capturing.begin.regexp support.type.parenthesis.regexp</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.parenthesis.non-capturing.end.regexp support.type.parenthesis.regexp</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#expression</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.regexp</string>
	<key>uuid</key>
	<string>39e15186-71e6-11e5-b82c-7c6d62900c7c</string>
</dict>
</plist>
